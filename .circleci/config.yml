version: 2.1

jobs:
  build:
    working_directory: ~/vocab_frontend
    docker:
      - image: circleci/node:12-browsers
        environment:
          CHROME_BIN: "/usr/bin/google-chrome"
    steps:
      - checkout
      - restore_cache:
          key: vocab_frontend-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: 
          name: Install
          command: npm install
      - save_cache:
          key: vocab_frontend-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
      - run: 
          name: Run tests
          command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
      - store_test_results:
          path: test-results

  heroku_docker_build:
    working_directory: ~/vocab_frontend
    docker:
      - image: circleci/node:12-browsers
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      # build and push Docker image
      - run:
      # Careful - will no longer work on Heroku as the Dockerfile buids for K8S!
          name: Build Docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build --build-arg BUILD_SCRIPT=build -t ruedigermueller/vocab_frontend:$TAG -t target:Heroku .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push ruedigermueller/vocab_frontend:$TAG
            echo $HEROKU_API_KEY | docker login -u=_ --password-stdin registry.heroku.com
            docker tag ruedigermueller/vocab_frontend:$TAG registry.heroku.com/$HEROKU_APP_NAME
            docker push registry.heroku.com/$HEROKU_APP_NAME

workflows:
  deploy:
    jobs:
      - build
      - heroku_docker_build:
          requires:
             - build
          context: vocab